pr: none

jobs:
- job:
  displayName: Linux
  pool:
    vmImage: "ubuntu-16.04"

  steps:
  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH.

  - bash: conda update conda --yes --quiet
    displayName: Update conda.

  - bash: conda env create -n econ-project-templates -f environment.yml
    displayName: Create Anaconda environment.

  - bash: |
      git config --global user.name "John Doe"
      git config --global user.email johndoe@example.com
    displayName: Configure git.

  - bash: |
      sudo DEBIAN_FRONTEND=noninteractive apt-get -y install texlive-latex-extra texlive-bibtex-extra biber
    displayName: Install Latex.

  - bash: |
      source activate econ-project-templates
      pytest
    displayName: Run pytests.

- job:
  displayName: MacOS
  pool:
    vmImage: "macOS-latest"

  steps:

  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH.

  # On Hosted macOS, the agent user doesn't have ownership of Miniconda's installation
  # directory. We need to take ownership if we want to update conda or install packages
  # globally.
  - bash: sudo chown -R $USER $CONDA
    displayName: Take ownership of conda installation

  - bash: conda update conda --yes --quiet
    displayName: Update conda.

  - bash: conda env create -n econ-project-templates -f environment.yml
    displayName: Create Anaconda environment.

  - bash: |
      git config --global user.name "John Doe"
      git config --global user.email johndoe@example.com
    displayName: Configure git.

  - bash: |
      brew install caskroom/cask
      brew cask install mactex-no-gui
    displayName: Install Latex.

  - bash: |
      echo "##vso[task.prependpath]/usr/local/texlive/2019/bin/x86_64-darwin"
    displayName: Add Latex to PATH.

  - bash: |
      source activate econ-project-templates
      pytest
    displayName: Run pytests.

- job:
  displayName: Windows
  pool:
    vmImage: "windows-latest"

  steps:

  # set conda paths as done in the official activate script.
  # https://github.com/conda/conda/blob/master/conda/activate.py#L493-L519
  - powershell: |
      Write-Host "##vso[task.prependpath]$env:CONDA\Library\mingw-w64\bin"
      Write-Host "##vso[task.prependpath]$env:CONDA\Library\usr\bin"
      Write-Host "##vso[task.prependpath]$env:CONDA\Library\bin"
      Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
      Write-Host "##vso[task.prependpath]$env:CONDA\bin"
    displayName: "Add conda to PATH on Windows"

  - bash: |
      conda update -n base conda -y &&
      conda init --all
    displayName: "Conda setup on Windows"

  - bash: conda env create -n econ-project-templates -f environment.yml
    displayName: Create Anaconda environment.

  - bash: |
      git config --global user.name "John Doe"
      git config --global user.email johndoe@example.com
    displayName: Configure git.

  # - bash: |
  #     miktexsetup ^
  #     --package-set=complete ^
  #     download
  #     miktexsetup ^
  #     --modify-path ^
  #     install
  #   displayName: Install Latex.

  # Edit wscripts file to exclude latex
  - bash: |
      python
      with open("{{cookiecutter.project_slug}}/wscript") as f:
          lines = f.read()
      out = lines.replace('{% if cookiecutter.configure_running_sphinx_from_waf == "y" %}', "")  
      out = out.replace('ctx.load("sphinx_build")', "")
      out = out.replace('{% endif %}    ctx.load("write_project_headers")', "")
      out = out.replace('{% if cookiecutter.use_biber_biblatex_for_tex_bibliographies == "y" %}')
      out = out.replace('ctx.load("biber"){% endif %}{% if cookiecutter.use_biber_biblatex_for_tex_bibliographies == "n" %}', "")
      out = out.replace('ctx.load("tex"){% endif %}', "")
      with open("{{cookiecutter.project_slug}}/wscript", "w") as f:
          f.write(out)
      for folder in ["julia", "matlab", "stata", "r", "python"]:
          with open("{{cookiecutter.project_slug}}/src_{}/wscript".format(folder)) as f:
              lines = f.read()
          out = lines.replace('ctx.recurse("paper")', "")
          out = out.replace('{% if cookiecutter.configure_running_sphinx_from_waf == "y" %}', "")
          out = out.replace('ctx.recurse("documentation")', "")
          out = out.replace('{% endif %}', "")
          with open("{{cookiecutter.project_slug}}}/src_{}/wscript".format(folder), "w") as f:
              f.write(out)
      exit()
    displayName: "Change wscripts to ignore latex."

  - bash: |
      CALL C:\Miniconda\condabin\conda_hook.bat && ^
      CALL conda activate econ-project-templates
      pytest tests/test_cookie.py
      pytest tests/test_waf.py
    displayName: Run pytests for waf and cookiecutter.