#! python


def build(ctx):
    def out_data(*args):
        return ctx.path_to(ctx, "OUT_DATA", *args)

    def out_analysis(*args):
        return ctx.path_to(ctx, "OUT_ANALYSIS", *args)

    def out_models(*args):
        return ctx.path_to(ctx, "OUT_MODEL_SPECS", *args)

    def out_figures(*args):
        return ctx.path_to(ctx, "OUT_FIGURES", *args)

    def out_tables(*args):
        return ctx.path_to(ctx, "OUT_TABLES", *args)

    # Figures 2a, 2b.
    ctx(
        features="run_do_script",
        source="figure_mortality.do",
        target=[
            out_analysis("log", "figure_mortality.log"),
            out_figures("risk_mort.eps"),
        ],
        deps=[out_data("ajrcomment_all.dta")],
    )

    models = ["baseline", "rmconj"]

    deps = {"first_stage": [], "second_stage": []}

    for m in models:
        for stage, deps_list in deps.items():
            deps_list.append(out_models(f"{m}.do"))
            deps_list.append(out_analysis(f"{stage}_estimation_{m}.dta"))

    # Table 2.
    ctx(
        features="run_do_script",
        source="table_first_stage_est.do",
        target=[
            out_analysis("log", "table_first_stage_est.log"),
            out_tables("table_first_stage_est.tex"),
        ],
        deps=deps["first_stage"],
        append=" ".join(models),
    )

    ctx(
        features="run_do_script",
        source="table_second_stage_est.do",
        target=[
            out_analysis("log", "table_second_stage_est.log"),
            out_tables("table_second_stage_est.tex"),
        ],
        deps=deps["second_stage"],
        append=" ".join(models),
    )

    from src.final.project_dependency_graph import make_project_dependency_graph

    ctx.add_post_fun(make_project_dependency_graph)
